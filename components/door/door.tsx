/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 public/models/models/door.gltf --t --o components/door/door.tsx 
*/

import * as THREE from 'three';
import React from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { useDoorStore } from './store';

type GLTFResult = GLTF & {
  nodes: {
    Rangka_Honey_Comb001: THREE.Mesh;
    ['2_Tali_Air_Horizontal']: THREE.Mesh;
    ['3_Tali_Air_Horizontal']: THREE.Mesh;
    ['3_Tali_Air_Vertikal']: THREE.Mesh;
    Architrave: THREE.Mesh;
    Daun_Pintu_Polos: THREE.Mesh;
    Engsel_Pintu: THREE.Mesh;
    ['Handel_&_Kunci_Pintu']: THREE.Mesh;
    Kusen_Kayu: THREE.Mesh;
  };
  materials: {
    PLYWOOD: THREE.MeshStandardMaterial;
    Melamin: THREE.MeshStandardMaterial;
    ['Taco HPL']: THREE.MeshStandardMaterial;
    Chrome: THREE.MeshStandardMaterial;
    MDF: THREE.MeshStandardMaterial;
  };
  animations: [];
};

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/door.gltf') as GLTFResult;
  const storage = useDoorStore();
  const DOOR_WIDTH_SCALE = storage.size.width / 83;
  return (
    <group {...props} dispose={null}>
      <group scale={0.025}>
        {storage.weatherStrip && storage.weatherStrip?.amount !== 0 ? (
          <mesh
            geometry={nodes['2_Tali_Air_Horizontal'].geometry}
            material={materials.Melamin}
            position={[-0.394, 0, 1.181]}
            scale={[DOOR_WIDTH_SCALE, 1, 1]}
          />
        ) : (
          storage.finishing && (
            <mesh
              geometry={nodes.Daun_Pintu_Polos.geometry}
              material={materials['Taco HPL']}
              position={[-0.394, 0, 1.181]}
            />
          )
        )}
        {storage.hinge && (
          <mesh
            geometry={nodes.Engsel_Pintu.geometry}
            material={materials.Chrome}
            position={[31.693, 7.874, 0.709]}
            scale={0.9}
          />
        )}
        {storage.keyHole && (
          <mesh
            geometry={nodes['Handel_&_Kunci_Pintu'].geometry}
            material={materials.Chrome}
            position={[0.787, 37.008, 3.858]}
          />
        )}
        {storage.frame !== undefined &&
          storage.frame.name !== 'Tanpa Kusen' && (
            <mesh
              geometry={nodes.Kusen_Kayu.geometry}
              material={materials.MDF}
              position={[-2.362, 0, 6.49]}
              scale={[1.011, 1, 1]}
            />
          )}
        {storage.frame?.architrave && (
          <mesh
            geometry={nodes.Architrave.geometry}
            material={materials.MDF}
            position={[-2, 0, 5.906]}
            scale={[1.012, 1, 1]}
          />
        )}
        <mesh
          geometry={nodes.Rangka_Honey_Comb001.geometry}
          material={
            storage.type.name.startsWith('HMR')
              ? materials.PLYWOOD
              : materials.MDF
          }
          position={[-0.394, 0, 1.181]}
          scale={[DOOR_WIDTH_SCALE, 1, 1]}
        />
      </group>
    </group>
  );
}

useGLTF.preload('/models/door.gltf');
