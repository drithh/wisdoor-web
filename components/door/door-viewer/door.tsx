/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 public/models/models/door.gltf --t --o components/door/door.tsx 
*/

import React from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTFResult } from './type';
import { useDoorStore } from '../store';
import { DoorFrame } from './frame';

export function Model(props: JSX.IntrinsicElements['group']) {
  const result = useGLTF('/models/door.gltf') as GLTFResult;
  const { nodes, materials } = result;
  const storage = useDoorStore();
  const DOOR_WIDTH_SCALE = storage.size.width / 83;

  return (
    <group {...props} dispose={null}>
      {storage.weatherStrip && storage.weatherStrip?.amount !== 0 ? (
        <mesh
          geometry={nodes['2_Tali_Air_Horizontal'].geometry}
          material={materials.melamin}
          scale={[DOOR_WIDTH_SCALE, 1, 1]}
          position={[-0.01, 0, 0.03]}
        />
      ) : (
        storage.finishing && (
          <mesh
            geometry={nodes.Daun_Pintu_Polos.geometry}
            material={materials.hpl}
            scale={[DOOR_WIDTH_SCALE, 1, 1]}
            position={[-0.01, 0, 0.03]}
          />
        )
      )}
      {storage.hinge && (
        <mesh
          geometry={nodes.Engsel_Pintu.geometry}
          material={materials.Chrome}
          position={[0.805, 0.2, 0.018]}
        />
      )}
      {storage.keyHole && storage.keyHole.isKeyHole && (
        <mesh
          geometry={nodes['Handel_&_Kunci_Pintu'].geometry}
          material={materials.Chrome}
          position={[0.02, 0.94, 0.098]}
        />
      )}
      <mesh
        geometry={nodes.Rangka_Honey_Comb001.geometry}
        material={
          storage.type.name.startsWith('HMR')
            ? materials.plywood
            : materials.mdf
        }
        scale={[DOOR_WIDTH_SCALE, 1, 1]}
        position={[-0.01, 0, 0.03]}
      />
      <DoorFrame result={result} storage={storage} />
    </group>
  );
}

useGLTF.preload('/models/door.gltf');
